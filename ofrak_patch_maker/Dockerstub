ARG TARGETARCH

# LLVM
RUN mkdir -p /opt/rbs/toolchain && \
    cd /tmp && \
    wget https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.1/clang+llvm-12.0.1-x86_64-linux-gnu-ubuntu-16.04.tar.xz --show-progress --progress=bar:force:noscroll && \
    tar xf clang+llvm-12.0.1-x86_64-linux-gnu-ubuntu-16.04.tar.xz -C /opt/rbs/toolchain && \
    rm -rf clang+llvm-12.0.1-x86_64-linux-gnu-ubuntu-16.04.tar.xz && \
    mv /opt/rbs/toolchain/clang+llvm-12.0.1-x86_64-linux-gnu-ubuntu- /opt/rbs/toolchain/llvm_12.0.1

# ARM GNU NONE EABI
RUN cd /tmp && \
    wget https://developer.arm.com/-/media/Files/downloads/gnu-rm/10-2020q4/gcc-arm-none-eabi-10-2020-q4-major-x86_64-linux.tar.bz2 --show-progress --progress=bar:force:noscroll && \
    tar xf gcc-arm-none-eabi-10-2020-q4-major-x86_64-linux.tar.bz2 -C /opt/rbs/toolchain && \
    rm -rf gcc-arm-none-eabi-10-2020-q4-major-x86_64-linux.tar.bz2

# LINUX GNU + BINUTILS
RUN apt-get -y update  && apt-get -y install software-properties-common gcc-10

RUN if [ "$TARGETARCH" = "amd64" ]; then \
    cd /tmp && \
    apt-get update && apt-get install -y texinfo && \
    wget http://archive.ubuntu.com/ubuntu/pool/main/b/binutils/binutils_2.34.orig.tar.xz --show-progress --progress=bar:force:noscroll && \
    tar xvf binutils_2.34.orig.tar.xz -C /opt/rbs/toolchain && \
    rm -rf binutils_2.34.orig.tar.xz && \
    cd /opt/rbs/toolchain/binutils-2.34 && \
    ./configure CC=/usr/bin/x86_64-linux-gnu-gcc-10 && \
    make -j32; \
fi;

RUN if [ "$TARGETARCH" = "arm64" ]; then \
    cd /tmp && \
    apt-get update && apt-get install -y texinfo && \
    wget http://archive.ubuntu.com/ubuntu/pool/main/b/binutils/binutils_2.34.orig.tar.xz --show-progress --progress=bar:force:noscroll && \
    tar xvf binutils_2.34.orig.tar.xz -C /opt/rbs/toolchain && \
    rm -rf binutils_2.34.orig.tar.xz && \
    cd /opt/rbs/toolchain/binutils-2.34 && \
    ./configure CC=/usr/bin/aarch64-linux-gnu-gcc-10 && \
    make -j32; \
fi;

#M68k GNU 10 Linux
#Only exists for x86
RUN if [ "$TARGETARCH" = "amd64" ]; then \
    apt-get update && apt-get install -y gcc-10-m68k-linux-gnu; \
fi;

#M68k VBCC
RUN cd /tmp && \
    wget http://phoenix.owl.de/tags/vbcc0_9h.tar.gz && \
    wget http://phoenix.owl.de/tags/vasm1_9.tar.gz && \
    mkdir -p /opt/rbs/toolchain/vbcc_0_9/bin/ && \
    mkdir -p /opt/rbs/toolchain/vbcc_0_9/config/ && \
    tar -xvf vbcc0_9h.tar.gz

RUN cd /tmp/vbcc && printf "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n" | TARGET=m68k make all

RUN cd /tmp/vbcc && cp ./bin/* /opt/rbs/toolchain/vbcc_0_9/bin/ && \
    cd .. && \
    tar -xvf vasm1_9.tar.gz && \
    cd ./vasm && \
    CPU=m68k SYNTAX=mot make && \
    cp ./vasmm68k_mot /opt/rbs/toolchain/vbcc_0_9/bin/ && \
    cp ./vobjdump /opt/rbs/toolchain/vbcc_0_9/bin/

#AARCH64 GNU 10 Linux
RUN if [ "$TARGETARCH" = "amd64" ]; then \
    apt-get update && apt-get install -y gcc-10-aarch64-linux-gnu; \
fi;

#AVR GCC
RUN apt-get update && apt-get install -y gcc-avr binutils-avr avr-libc

#PPC GNU 10 Linux
RUN if [ "$TARGETARCH" = "amd64" ]; then \
    apt-get update && apt-get install -y gcc-10-powerpc-linux-gnu; \
fi;

#PPCVLE 4 NXP GCC Fork
# Only runs if the NXP email and password to log in and download the toolchain are passed to build_image.py via the CLI flags
ARG OFRAK_DIR=.
COPY $OFRAK_DIR/ofrak_patch_maker/download_ppcvle.py /tmp/
RUN --mount=type=secret,id=nxp_email,dst=/tmp/nxp_email.txt \
    --mount=type=secret,id=nxp_password,dst=/tmp/nxp_password.txt \
    test -f /tmp/nxp_email.txt && \
    test -f /tmp/nxp_password.txt && \
    python3 -m pip install playwright && \
    playwright install --with-deps chromium && \
    python3 /tmp/download_ppcvle.py "$(cat /tmp/nxp_email.txt)" "$(cat /tmp/nxp_password.txt)" && \
    cd /tmp && \
    unzip -q gcc-4.9.4-Ee200-eabivle-x86_64-linux-g2724867.zip && \
    mv powerpc-eabivle-4_9 /opt/rbs/toolchain/ && \
    rm gcc-4.9.4-Ee200-eabivle-x86_64-linux-g2724867.zip && \
    dpkg --add-architecture i386 && \
    apt-get update && \
    apt-get install -y libc6:i386 libncurses5:i386 libstdc++6:i386 lib32z1 \
    || true
