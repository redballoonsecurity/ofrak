ARG TARGETARCH

# LLVM
RUN mkdir -p /opt/rbs/toolchain && \
    cd /tmp && \
    wget https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.1/clang+llvm-12.0.1-x86_64-linux-gnu-ubuntu-16.04.tar.xz --show-progress --progress=bar:force:noscroll && \
    tar xf clang+llvm-12.0.1-x86_64-linux-gnu-ubuntu-16.04.tar.xz -C /opt/rbs/toolchain && \
    rm -rf clang+llvm-12.0.1-x86_64-linux-gnu-ubuntu-16.04.tar.xz && \
    mv /opt/rbs/toolchain/clang+llvm-12.0.1-x86_64-linux-gnu-ubuntu- /opt/rbs/toolchain/llvm_12.0.1

# ARM GNU NONE EABI
RUN cd /tmp && \
    wget https://developer.arm.com/-/media/Files/downloads/gnu-rm/10-2020q4/gcc-arm-none-eabi-10-2020-q4-major-x86_64-linux.tar.bz2 --show-progress --progress=bar:force:noscroll && \
    tar xf gcc-arm-none-eabi-10-2020-q4-major-x86_64-linux.tar.bz2 -C /opt/rbs/toolchain && \
    rm -rf gcc-arm-none-eabi-10-2020-q4-major-x86_64-linux.tar.bz2

# LINUX GNU + BINUTILS
RUN apt-get -y update  && apt-get -y install software-properties-common gcc-10

#X64-64 toolchain for arm64 Docker images
RUN if [ "$TARGETARCH" = "arm64" ]; then \
    apt-get update && apt-get install -y gcc-10-x86-64-linux-gnu; \
fi;

#M68k GNU 10 Linux
#Only exists for x86
RUN if [ "$TARGETARCH" = "amd64" ]; then \
    apt-get update && apt-get install -y gcc-10-m68k-linux-gnu; \
fi;

#M68k VBCC
RUN cd /tmp && \
    wget http://phoenix.owl.de/tags/vbcc0_9h.tar.gz && \
    wget http://phoenix.owl.de/tags/vasm1_9.tar.gz && \
    mkdir -p /opt/rbs/toolchain/vbcc_0_9/bin/ && \
    mkdir -p /opt/rbs/toolchain/vbcc_0_9/config/ && \
    tar -xvf vbcc0_9h.tar.gz

RUN cd /tmp/vbcc && printf "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n" | TARGET=m68k make all

RUN cd /tmp/vbcc && cp ./bin/* /opt/rbs/toolchain/vbcc_0_9/bin/ && \
    cd .. && \
    tar -xvf vasm1_9.tar.gz && \
    cd ./vasm && \
    CPU=m68k SYNTAX=mot make && \
    cp ./vasmm68k_mot /opt/rbs/toolchain/vbcc_0_9/bin/ && \
    cp ./vobjdump /opt/rbs/toolchain/vbcc_0_9/bin/

#AARCH64 GNU 10 Linux
RUN if [ "$TARGETARCH" = "amd64" ]; then \
    apt-get update && apt-get install -y gcc-10-aarch64-linux-gnu; \
fi;

#AVR GCC
RUN apt-get update && apt-get install -y gcc-avr binutils-avr avr-libc

#PPC GNU 10 Linux
RUN if [ "$TARGETARCH" = "amd64" ]; then \
    apt-get update && apt-get install -y gcc-10-powerpc-linux-gnu; \
fi;

#BCC (GCC) SPARC v8
RUN if [ "$TARGETARCH" = "amd64" ]; then \
    cd /tmp/ \
      && wget 'https://www.gaisler.com/anonftp/bcc2/bin/bcc-2.0.7-gcc-linux64.tar.xz' \
      && mkdir -p /opt/rbs/toolchain/ \
      && tar -C /opt/rbs/toolchain/ -xJf bcc-2.0.7-gcc-linux64.tar.xz; \
fi
